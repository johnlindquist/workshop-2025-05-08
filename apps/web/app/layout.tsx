import "./globals.css";

const DEBUG_UI = typeof process !== "undefined" && process.env.NEXT_PUBLIC_DEBUG_UI === "true";

if (typeof window !== "undefined") {
  // Print Tailwind version and config if possible
  // @ts-ignore
  if (window.tailwind) {
    // @ts-ignore
    console.log("[DEBUG] Tailwind version:", window.tailwind.version);
    // @ts-ignore
    console.log("[DEBUG] Tailwind config:", window.tailwind.config);
  } else {
    console.log("[DEBUG] Tailwind runtime not detected. Version/config not available.");
  }
}

export const metadata = {
  title: "Next.js",
  description: "Generated by Next.js",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body>
        {DEBUG_UI && (
          <div>
            <div className="bg-red-700 text-white text-center py-2 font-bold z-50">
              [DEBUG] If you see this red banner, Tailwind CSS is loaded.
            </div>
            <div className="flex flex-wrap gap-2 justify-center my-2">
              <div className="bg-red-500 text-white px-2">red-500</div>
              <div className="bg-orange-500 text-white px-2">orange-500</div>
              <div className="bg-yellow-500 text-black px-2">yellow-500</div>
              <div className="bg-green-500 text-white px-2">green-500</div>
              <div className="bg-blue-500 text-white px-2">blue-500</div>
              <div className="bg-indigo-500 text-white px-2">indigo-500</div>
              <div className="bg-purple-500 text-white px-2">purple-500</div>
              <div className="bg-pink-500 text-white px-2">pink-500</div>
              <div className="bg-stone-950 text-white px-2">stone-950</div>
              <div className="bg-stone-800 text-white px-2">stone-800</div>
              <div className="bg-stone-700 text-white px-2">stone-700</div>
              <div className="rounded-xl bg-gray-300 text-black px-2">rounded-xl</div>
              <div className="shadow-lg bg-white text-black px-2">shadow-lg</div>
            </div>
          </div>
        )}
        {children}
      </body>
    </html>
  );
}
