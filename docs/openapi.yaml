openapi: 3.0.3
info:
  title: "Note-Taking App API"
  version: "1.0.0"
  description: "API for creating, reading, updating, and deleting notes for a cross-platform note-taking application."
servers:
  - url: "https://api.yourdomain.com/v1"
    description: "Production Server"
  - url: "http://localhost:8787/v1"
    description: "Local Development Server"

tags:
  - name: "Notes"
    description: "Operations related to notes."

components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
        content:
          type: string
          description: "The main body of the note."
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - content # Assuming content is required, title is optional.
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /notes:
    post:
      tags:
        - Notes
      summary: Create a new note
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
                - content
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
    get:
      tags:
        - Notes
      summary: Retrieve all notes
      responses:
        '200':
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
  /notes/{noteId}:
    get:
      tags:
        - Notes
      summary: Retrieve a specific note by ID
      parameters:
        - name: noteId
          in: path
          required: true
          description: ID of the note to retrieve
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved the note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    put:
      tags:
        - Notes
      summary: Update an existing note
      parameters:
        - name: noteId
          in: path
          required: true
          description: ID of the note to update
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              # No required fields for update, allow partial updates
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    delete:
      tags:
        - Notes
      summary: Delete a note
      parameters:
        - name: noteId
          in: path
          required: true
          description: ID of the note to delete
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Note not found 